Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
                              obj/low_level_pdi.o (__udivmodsi4)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o (exit)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                              obj/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                              obj/main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

cmd_buffer          0x14              obj/xmega_pdi_nvm.o
retval              0x1               obj/xmega_pdi_nvm.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
LOAD obj/main.o
LOAD obj/low_level_pdi.o
LOAD obj/xmega_pdi_nvm.o
LOAD obj/usart.o
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xab2
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000034       0x24 obj/main.o
                0x0000000000000058                . = ALIGN (0x2)
                0x0000000000000058                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000058        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000058                __trampolines_end = .
 *(.progmem*)
                0x0000000000000058                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000058                __ctors_start = .
 *(.ctors)
                0x0000000000000058                __ctors_end = .
                0x0000000000000058                __dtors_start = .
 *(.dtors)
                0x0000000000000058                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000058        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
                0x0000000000000058                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000058        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000064       0x16 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                0x0000000000000064                __do_copy_data
 .init4         0x000000000000007a       0x10 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x000000000000007a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000008a        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
                0x000000000000008e                __vector_22
                0x000000000000008e                __vector_24
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_23
                0x000000000000008e                __vector_25
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_21
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000090       0xdc obj/main.o
                0x00000000000000a6                __vector_1
                0x000000000000010a                __vector_17
 .text          0x000000000000016c      0x1d2 obj/low_level_pdi.o
                0x000000000000016c                pdi_init
                0x0000000000000212                pdi_write
                0x000000000000028c                pdi_read
                0x00000000000002e0                pdi_get_byte
                0x000000000000030c                pdi_deinit
 .text          0x000000000000033e      0x4ce obj/xmega_pdi_nvm.o
                0x00000000000003e8                xnvm_put_dev_in_reset
                0x000000000000040c                xnvm_ioread_byte
                0x0000000000000464                xnvm_iowrite_byte
                0x00000000000004ae                xnvm_ctrl_cmd_write
                0x00000000000004b6                xnvm_chip_erase
                0x0000000000000538                xnvm_st_star_ptr_postinc
                0x000000000000054c                xnvm_load_buffer
                0x0000000000000590                xnvm_st_ptr
                0x00000000000005ca                xnvm_read_memory
                0x0000000000000628                xnvm_ctrl_wait_nvmbusy
                0x000000000000067c                xnvm_init
                0x00000000000006e2                xnvm_erase_buffer
                0x000000000000073c                xnvm_erase_user_sign
                0x0000000000000766                xnvm_erase_program_user_sign
                0x0000000000000796                xnvm_write_fuse_bit
                0x0000000000000802                xnvm_deinit
 .text          0x000000000000080c        0x0 obj/usart.o
 .text          0x000000000000080c        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x000000000000080c        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text          0x000000000000080c        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000080c        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x000000000000080c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000080c      0x25e obj/main.o
                0x000000000000080c                main
 .text.libgcc.mul
                0x0000000000000a6a        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000a6a       0x44 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
                0x0000000000000a6a                __udivmodsi4
 .text.libgcc   0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000aae                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000aae        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                0x0000000000000aae                exit
                0x0000000000000aae                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000aae        0x4 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000ab2                _etext = .

.data           0x0000000000800100        0xe load address 0x0000000000000ab2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
 .data          0x0000000000800100        0x2 obj/main.o
 .data          0x0000000000800102        0x0 obj/low_level_pdi.o
 .data          0x0000000000800102        0x0 obj/xmega_pdi_nvm.o
 .data          0x0000000000800102        0x0 obj/usart.o
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800102        0xc obj/main.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x000000000080010e                . = ALIGN (0x2)
                0x000000000080010e                _edata = .
                0x000000000080010e                PROVIDE (__data_end, .)

.bss            0x000000000080010e      0x126
                0x000000000080010e                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080010e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
 .bss           0x000000000080010e      0x110 obj/main.o
 .bss           0x000000000080021e        0x0 obj/low_level_pdi.o
 .bss           0x000000000080021e        0x1 obj/xmega_pdi_nvm.o
                0x000000000080021e                initialized
 .bss           0x000000000080021f        0x0 obj/usart.o
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
 .bss           0x000000000080021f        0x0 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080021f       0x15 obj/xmega_pdi_nvm.o
                0x000000000080021f                cmd_buffer
                0x0000000000800233                retval
                0x0000000000800234                PROVIDE (__bss_end, .)
                0x0000000000000ab2                __data_load_start = LOADADDR (.data)
                0x0000000000000ac0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800234        0x0
                0x0000000000800234                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800234                PROVIDE (__noinit_end, .)
                0x0000000000800234                _end = .
                0x0000000000800234                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 obj/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 obj/low_level_pdi.o
 .comment       0x0000000000000000       0x12 obj/xmega_pdi_nvm.o
 .comment       0x0000000000000000       0x12 obj/usart.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x80
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 obj/main.o
 .debug_aranges
                0x0000000000000028       0x20 obj/low_level_pdi.o
 .debug_aranges
                0x0000000000000048       0x20 obj/xmega_pdi_nvm.o
 .debug_aranges
                0x0000000000000068       0x18 obj/usart.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000     0x1ded
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x811 obj/main.o
 .debug_info    0x0000000000000811      0x7b4 obj/low_level_pdi.o
 .debug_info    0x0000000000000fc5      0xdb6 obj/xmega_pdi_nvm.o
 .debug_info    0x0000000000001d7b       0x72 obj/usart.o

.debug_abbrev   0x0000000000000000      0x851
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x288 obj/main.o
 .debug_abbrev  0x0000000000000288      0x24d obj/low_level_pdi.o
 .debug_abbrev  0x00000000000004d5      0x356 obj/xmega_pdi_nvm.o
 .debug_abbrev  0x000000000000082b       0x26 obj/usart.o

.debug_line     0x0000000000000000      0x4f4
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x169 obj/main.o
 .debug_line    0x0000000000000169      0x1de obj/low_level_pdi.o
 .debug_line    0x0000000000000347      0x193 obj/xmega_pdi_nvm.o
 .debug_line    0x00000000000004da       0x1a obj/usart.o

.debug_frame    0x0000000000000000      0x3c0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0xac obj/main.o
 .debug_frame   0x00000000000000ac       0x84 obj/low_level_pdi.o
 .debug_frame   0x0000000000000130      0x290 obj/xmega_pdi_nvm.o

.debug_str      0x0000000000000000      0x957
 *(.debug_str)
 .debug_str     0x0000000000000000      0x486 obj/main.o
                                        0x4c1 (size before relaxing)
 .debug_str     0x0000000000000486      0x385 obj/low_level_pdi.o
                                        0x5ba (size before relaxing)
 .debug_str     0x000000000000080b      0x144 obj/xmega_pdi_nvm.o
                                        0x4c2 (size before relaxing)
 .debug_str     0x000000000000094f        0x8 obj/usart.o
                                        0x149 (size before relaxing)

.debug_loc      0x0000000000000000     0x1370
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x4bb obj/main.o
 .debug_loc     0x00000000000004bb      0x290 obj/low_level_pdi.o
 .debug_loc     0x000000000000074b      0xc25 obj/xmega_pdi_nvm.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x68
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x50 obj/main.o
 .debug_ranges  0x0000000000000050       0x18 obj/low_level_pdi.o

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__bss_end                                         /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_clear_bss.o)
                                                  obj/xmega_pdi_nvm.o
                                                  obj/main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_copy_data.o)
                                                  obj/main.o
__heap_end                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__init                                            /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__stack                                           /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_udivmodsi4.o)
                                                  obj/low_level_pdi.o
__vector_1                                        obj/main.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_10                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_11                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_12                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_13                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_14                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_15                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_16                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_17                                       obj/main.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_18                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_19                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_2                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_20                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_21                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_22                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_23                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_24                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_25                                       /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_3                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_4                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_5                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_6                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_7                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_8                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_9                                        /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vector_default                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
__vectors                                         /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
_exit                                             /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
cmd_buffer                                        obj/xmega_pdi_nvm.o
exit                                              /usr/lib/gcc/avr/4.8.1/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
initialized                                       obj/xmega_pdi_nvm.o
main                                              obj/main.o
                                                  /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr4/crtm48.o
pdi_deinit                                        obj/low_level_pdi.o
                                                  obj/xmega_pdi_nvm.o
pdi_get_byte                                      obj/low_level_pdi.o
                                                  obj/xmega_pdi_nvm.o
pdi_init                                          obj/low_level_pdi.o
                                                  obj/xmega_pdi_nvm.o
pdi_read                                          obj/low_level_pdi.o
                                                  obj/xmega_pdi_nvm.o
pdi_write                                         obj/low_level_pdi.o
                                                  obj/xmega_pdi_nvm.o
retval                                            obj/xmega_pdi_nvm.o
xnvm_chip_erase                                   obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_ctrl_cmd_write                               obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_ctrl_wait_nvmbusy                            obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_deinit                                       obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_erase_buffer                                 obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_erase_program_user_sign                      obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_erase_user_sign                              obj/xmega_pdi_nvm.o
xnvm_init                                         obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_ioread_byte                                  obj/xmega_pdi_nvm.o
xnvm_iowrite_byte                                 obj/xmega_pdi_nvm.o
xnvm_load_buffer                                  obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_put_dev_in_reset                             obj/xmega_pdi_nvm.o
xnvm_read_memory                                  obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_st_ptr                                       obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_st_star_ptr_postinc                          obj/xmega_pdi_nvm.o
                                                  obj/main.o
xnvm_write_fuse_bit                               obj/xmega_pdi_nvm.o
                                                  obj/main.o
