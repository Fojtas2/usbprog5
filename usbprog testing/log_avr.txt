Status:

Signature: OK
Flash-Read: OK
eeprom-Read: OK
Fuse-Write: OK
Fuse-Read: OK
Fuse-Write: OK
Fuse-Read: OK
Lockbits-Read: OK
Lockbits-Write: OK
Lockbits-Read: OK
Flash-Read: OK
Delete: OK
Lockbits-Read: OK
Flash-Write: OK
eeprom-Write: OK


------------------------------------

read signature:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)

avrdude done.  Thank you.





flash_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading flash memory:

Reading | ################################################## | 100% 11.59s

avrdude: writing output file "/tmp/flash.hex"

avrdude done.  Thank you.

get_file
recieve file
flash.hex




eeprom_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 avrdude: WARNING: -E option not supported by this programmer type

avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading eeprom memory:

Reading | ################################################## | 100% 0.39s

avrdude: writing output file "/tmp/eeprom.hex"

avrdude done.  Thank you.

get_file
recieve file
eeprom.hex




fuse_write:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading input file "0xc1"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xc1:
avrdude: load data lfuse data from input file 0xc1:
avrdude: input file 0xc1 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.01s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.





fuse_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading lfuse memory:

Reading | ################################################## | 100% 0.01s

avrdude: writing output file "<stdout>"
0xc1
avrdude: reading hfuse memory:

Reading | ################################################## | 100% 0.00s

avrdude: writing output file "<stdout>"
0xd9

avrdude done.  Thank you.





fuse_write:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading input file "0xe4"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xe4:
avrdude: load data lfuse data from input file 0xe4:
avrdude: input file 0xe4 contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.01s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.01s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.





fuse_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading lfuse memory:

Reading | ################################################## | 100% 0.00s

avrdude: writing output file "<stdout>"
0xe4
avrdude: reading hfuse memory:

Reading | ################################################## | 100% 0.00s

avrdude: writing output file "<stdout>"
0xd9

avrdude done.  Thank you.





lockbits_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading lock memory:

Reading | ################################################## | 100% 0.00s

avrdude: writing output file "<stdout>"
0x3f

avrdude done.  Thank you.





lockbits_write:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading input file "0x1f"
avrdude: writing lock (1 bytes):

Writing | ################################################## | 100% 0.01s

avrdude: 1 bytes of lock written
avrdude: verifying lock memory against 0x1f:
avrdude: load data lock data from input file 0x1f:
avrdude: input file 0x1f contains 1 bytes
avrdude: reading on-chip lock data:

Reading | ################################################## | 100% 0.01s

avrdude: verifying ...
avrdude: 1 bytes of lock verified

avrdude done.  Thank you.





lockbits_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading lock memory:

Reading | ################################################## | 100% 0.01s

avrdude: writing output file "<stdout>"
0x1f

avrdude done.  Thank you.





flash_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading flash memory:

Reading | ################################################## | 100% 11.60s

avrdude: writing output file "/tmp/flash.hex"

avrdude done.  Thank you.

get_file
recieve file
flash.hex




delete:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: erasing chip

avrdude done.  Thank you.





lockbits_read:

connect port
connecting to 10.0.0.1 port 8888
send code to server
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading lock memory:

Reading | ################################################## | 100% 0.00s

avrdude: writing output file "<stdout>"
0x3f

avrdude done.  Thank you.





flash_write:

connect port
connecting to 10.0.0.1 port 8888
send code to server
set_file
send file
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: NOTE: "flash" memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: reading input file "/tmp/flash.hex"
avrdude: writing flash (5272 bytes):

Writing | ################################################## | 100% 4.14s

avrdude: 5272 bytes of flash written
avrdude: verifying flash memory against /tmp/flash.hex:
avrdude: load data flash data from input file /tmp/flash.hex:
avrdude: input file /tmp/flash.hex contains 5272 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.89s

avrdude: verifying ...
avrdude: 5272 bytes of flash verified

avrdude done.  Thank you.





eeprom_write:

connect port
connecting to 10.0.0.1 port 8888
send code to server
set_file
send file
go
recieve output in 'realtime'
 
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.01s

avrdude: Device signature = 0x1e9403 (probably m16)
avrdude: reading input file "/tmp/eeprom.hex"
avrdude: writing eeprom (512 bytes):

Writing | ################################################## | 100% 0.43s

avrdude: 512 bytes of eeprom written
avrdude: verifying eeprom memory against /tmp/eeprom.hex:
avrdude: load data eeprom data from input file /tmp/eeprom.hex:
avrdude: input file /tmp/eeprom.hex contains 512 bytes
avrdude: reading on-chip eeprom data:

Reading | ################################################## | 100% 0.43s

avrdude: verifying ...
avrdude: 512 bytes of eeprom verified

avrdude done.  Thank you.





